{
	"info": {
		"_postman_id": "050eb1a2-a701-4721-8d6c-b2e18652a2c2",
		"name": "Hovadobjam java",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "/trash",
			"item": [
				{
					"name": "trash get",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/trashes/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"trashes",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "trash get 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ed71847f-4b45-414c-9835-8424a61e32b8",
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Error message correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.error).to.eql(\"Not found: Cannot find trash with id:'2000'\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/trashes/2000",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"trashes",
								"2000"
							]
						}
					},
					"response": []
				},
				{
					"name": "trash put",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 2,\r\n    \"createdAt\": \"2021-09-18T11:10:52.155049\",\r\n    \"lastUpdatedAt\": \"2021-09-18T11:31:01.690967\",\r\n    \"name\": \"modifed\",\r\n    \"materialDto\": {\r\n        \"id\": 1,\r\n        \"createdAt\": \"2020-09-18T11:30:52.137098\",\r\n        \"lastUpdatedAt\": \"2020-09-18T11:30:52.137098\",\r\n        \"name\": \"alma\",\r\n        \"trashesDto\": null\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/trashes/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"trashes",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "trash post OK",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fc356c08-dbc2-47ba-bd5b-ff102877292c",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Name saved correctly\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"new\");\r",
									"});\r",
									"\r",
									"pm.test(\"Material saved correctly\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.materialDto.id).to.eql(1);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"new\",\r\n    \"materialDto\": {\r\n        \"id\": 1}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/trashes",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"trashes"
							]
						}
					},
					"response": []
				},
				{
					"name": "trash post material id not provided",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2cc01eeb-70e2-413a-8457-6460ba32a5fb",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Error message correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.error).to.eql(\"Invalid input: materialId id must be provided!\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"new\",\r\n    \"materialDto\": {\r\n        \"name\": \"failed\"}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/trashes",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"trashes"
							]
						}
					},
					"response": []
				},
				{
					"name": "trash post material id not exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "16b90038-d61f-4fc9-ba8c-84e4d5c232a8",
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Error message correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.error).to.eql(\"Not found: Cannot find material with id:'-1'\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"new\",\r\n    \"materialDto\": {\r\n        \"id\": -1,\r\n        \"name\":\"whatever\"}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/trashes",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"trashes"
							]
						}
					},
					"response": []
				},
				{
					"name": "trash get page",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/trashes",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"trashes"
							]
						}
					},
					"response": []
				},
				{
					"name": "trash delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a4793b68-9b70-4874-9254-c74becea87d8",
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/trashes/4",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"trashes",
								"4"
							]
						}
					},
					"response": []
				},
				{
					"name": "trash put validation - name",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "13f6605a-64b1-4e7f-8050-3b5ac079a93b",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Error message is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.error).to.eql(\"name: Name is mandatory\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 2,\r\n    \"createdAt\": \"2021-09-18T11:10:52.155049\",\r\n    \"lastUpdatedAt\": \"2021-09-18T11:31:01.690967\",\r\n    \"name\": \"\",\r\n    \"materialDto\": {\r\n        \"id\": 1,\r\n        \"createdAt\": \"2020-09-18T11:30:52.137098\",\r\n        \"lastUpdatedAt\": \"2020-09-18T11:30:52.137098\",\r\n        \"name\": \"alma\",\r\n        \"trashesDto\": null\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/trashes/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"trashes",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "trash put validation - id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6aa3e27c-f904-4f99-8fb2-dac34d75e1b9",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Error message is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.error).to.eql(\"Invalid input: entity Id '2' and resource Id '32' doesn't match!\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 32,\r\n    \"createdAt\": \"2021-09-18T11:10:52.155049\",\r\n    \"lastUpdatedAt\": \"2021-09-18T11:31:01.690967\",\r\n    \"name\": \"modifed\",\r\n    \"materialDto\": {\r\n        \"id\": 1,\r\n        \"createdAt\": \"2020-09-18T11:30:52.137098\",\r\n        \"lastUpdatedAt\": \"2020-09-18T11:30:52.137098\",\r\n        \"name\": \"alma\",\r\n        \"trashesDto\": null\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/trashes/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"trashes",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "trash delete 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ed71847f-4b45-414c-9835-8424a61e32b8",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Error message correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.error).to.eql(\"Not found: Cannot find trash with id:'2000'\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/trashes/2000",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"trashes",
								"2000"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "user",
			"item": [
				{
					"name": "http://localhost:8080/api/users/sign-up",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d6b30e70-0573-429d-9008-4dbb06a2e783",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"admin2\",\n    \"password\": \"password\"\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/users/sign-up",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"users",
								"sign-up"
							]
						}
					},
					"response": []
				},
				{
					"name": "http://localhost:8080/login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "473a46f3-d8ed-4d8b-bbe0-a8b9c892381d",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Auth is present\", function () {\r",
									"    pm.response.to.have.header(\"Authorization\");\r",
									"});\r",
									"\r",
									"pm.test(\"Token saved to envrionment\", function(){\r",
									"    const auth_header = pm.response.headers.get('Authorization');\r",
									"    auth_token = auth_header.split(\" \")[1];\r",
									"    pm.environment.set(\"authToken\", auth_token);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"admin\",\n    \"password\": \"password\"\n}"
						},
						"url": {
							"raw": "http://localhost:8080/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "logout",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/logout",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"logout"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "notAuthorized",
			"item": [
				{
					"name": "trash post without token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "335140d8-b2de-42b4-bc26-db7004c94b9f",
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"pm.test(\"Error message correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Access Denied\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"new\",\r\n    \"materialDto\": {\r\n        \"id\": 1}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/trashes",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"trashes"
							]
						}
					},
					"response": []
				},
				{
					"name": "trash post malformed token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4be65ba2-ff80-47cc-85c7-65fa32789343",
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"pm.test(\"Error message correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Access Denied\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "Alma {{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"new\",\r\n    \"materialDto\": {\r\n        \"id\": 1}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/trashes",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"trashes"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "material delete",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/materials/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"materials",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "material get",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/materials/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"materials",
						"1"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{authToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "3b196f16-fcfd-43b1-9b2f-a4c594ca1227",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "5c61129c-5b49-4184-b764-6c2735204838",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}