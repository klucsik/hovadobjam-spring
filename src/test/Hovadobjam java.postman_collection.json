{
	"info": {
		"_postman_id": "050eb1a2-a701-4721-8d6c-b2e18652a2c2",
		"name": "Hovadobjam java",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "/trash",
			"item": [
				{
					"name": "trash get",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/trashes/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"trashes",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "trash get 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ed71847f-4b45-414c-9835-8424a61e32b8",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Error message correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.ERRORS).to.eql(\"Not found: Cannot find trash with id:'2000'\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/trashes/2000",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"trashes",
								"2000"
							]
						}
					},
					"response": []
				},
				{
					"name": "trash put",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 2,\r\n    \"createdAt\": \"2021-09-18T11:10:52.155049\",\r\n    \"lastUpdatedAt\": \"2021-09-18T11:31:01.690967\",\r\n    \"name\": \"modifed\",\r\n    \"materialDto\": {\r\n        \"id\": 1,\r\n        \"createdAt\": \"2020-09-18T11:30:52.137098\",\r\n        \"lastUpdatedAt\": \"2020-09-18T11:30:52.137098\",\r\n        \"name\": \"alma\",\r\n        \"trashesDto\": null\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/trashes/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"trashes",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "trash post OK",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fc356c08-dbc2-47ba-bd5b-ff102877292c",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Name saved correctly\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"new\");\r",
									"});\r",
									"\r",
									"pm.test(\"Material saved correctly\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.materialDto.id).to.eql(1);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"new\",\r\n    \"materialDto\": {\r\n        \"id\": 1}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/trashes",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"trashes"
							]
						}
					},
					"response": []
				},
				{
					"name": "trash post material id not provided",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2cc01eeb-70e2-413a-8457-6460ba32a5fb",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Error message correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.ERRORS).to.eql(\"Invalid input: materialId id must be provided!\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"new\",\r\n    \"materialDto\": {\r\n        \"name\": \"failed\"}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/trashes",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"trashes"
							]
						}
					},
					"response": []
				},
				{
					"name": "trash post material id not exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "16b90038-d61f-4fc9-ba8c-84e4d5c232a8",
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Error message correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.ERRORS).to.eql(\"Not found: Cannot find material with id:'-1'\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"new\",\r\n    \"materialDto\": {\r\n        \"id\": -1,\r\n        \"name\":\"whatever\"}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/trashes",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"trashes"
							]
						}
					},
					"response": []
				},
				{
					"name": "trash get page",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/trashes",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"trashes"
							]
						}
					},
					"response": []
				},
				{
					"name": "trash delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a4793b68-9b70-4874-9254-c74becea87d8",
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/trashes/4",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"trashes",
								"4"
							]
						}
					},
					"response": []
				},
				{
					"name": "trash put validation - name",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "13f6605a-64b1-4e7f-8050-3b5ac079a93b",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Error message is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.ERRORS).to.eql(\"name: Name is mandatory\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 2,\r\n    \"createdAt\": \"2021-09-18T11:10:52.155049\",\r\n    \"lastUpdatedAt\": \"2021-09-18T11:31:01.690967\",\r\n    \"name\": \"\",\r\n    \"materialDto\": {\r\n        \"id\": 1,\r\n        \"createdAt\": \"2020-09-18T11:30:52.137098\",\r\n        \"lastUpdatedAt\": \"2020-09-18T11:30:52.137098\",\r\n        \"name\": \"alma\",\r\n        \"trashesDto\": null\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/trashes/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"trashes",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "trash put validation - id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6aa3e27c-f904-4f99-8fb2-dac34d75e1b9",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Error message is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.ERRORS).to.eql(\"Invalid input: entity Id '2' and resource Id '32' doesn't match!\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 32,\r\n    \"createdAt\": \"2021-09-18T11:10:52.155049\",\r\n    \"lastUpdatedAt\": \"2021-09-18T11:31:01.690967\",\r\n    \"name\": \"modifed\",\r\n    \"materialDto\": {\r\n        \"id\": 1,\r\n        \"createdAt\": \"2020-09-18T11:30:52.137098\",\r\n        \"lastUpdatedAt\": \"2020-09-18T11:30:52.137098\",\r\n        \"name\": \"alma\",\r\n        \"trashesDto\": null\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/trashes/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"trashes",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "trash delete 404",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ed71847f-4b45-414c-9835-8424a61e32b8",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Error message correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.ERRORS).to.eql(\"Not found: Cannot find trash with id:'2000'\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/trashes/2000",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"trashes",
								"2000"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "material delete",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/materials/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"materials",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "material get",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/materials/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"materials",
						"1"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}